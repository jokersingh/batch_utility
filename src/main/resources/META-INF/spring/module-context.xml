<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:batch="http://www.springframework.org/schema/batch"
	xsi:schemaLocation="
	http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-2.1.xsd
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

	<description>Example job to get you started. It provides a skeleton for
		a typical batch application.</description>

	<batch:job id="job1">
		<batch:step id="step1">
			<batch:tasklet transaction-manager="transactionManager"
				start-limit="100">
				<batch:chunk reader="multiResourceReader" writer="writer"
					commit-interval="1" />
			</batch:tasklet>
		</batch:step>
	</batch:job>
	
	<bean id="multiResourceReader"
	class="org.springframework.batch.item.file.MultiResourceItemReader">
	<property name="resources" value="classpath:/META-INF/csv/*.csv" />
	<property name="delegate" ref="flatFileReader" />
  </bean>
	
	<bean id="flatFileReader" class="com.barun.spring.reader.CustomFlatFileItemReader">
		<property name="lineMapper" ref="lineMapper" />
	</bean>
	<bean id="lineMapper" class="com.barun.spring.mapper.CustomLineMapper" scope="singleton">
		<property name="lineTokenizer" ref="lineTokenizer" />
		<property name="fieldSetMapper" ref="fieldSetMapper" />
	</bean>	
	<bean id="lineTokenizer"
		class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
	</bean>
	<bean id="fieldSetMapper"
		class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
		<property name="prototypeBeanName" value="model" />
	</bean>
	<bean id="model" class="com.barun.spring.model.impl.Person"/>
	
</beans>
